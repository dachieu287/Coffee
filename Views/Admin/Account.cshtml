@model PaginatedList<Coffee.Models.Account>

@{
    ViewData["Title"] = "Account";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>Quản lí tài khoản</h1>

<form asp-controller="Admin" asp-action="Account" method="get">

    <p>
        Tìm kiếm theo:
        <select name="typeSearch">
            <option value="Username">Tên tài khoản</option>
            <option value="Name">Tên</option>
            <option value="Phone">Số điện thoại</option>
            <option value="Email">Email</option>
            <option value="Address">Địa chỉ</option>
        </select>

        Tìm kiếm: <input type="text" name="searchString">
        <input type="submit" value="Tìm kiếm" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Privilege)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @{
                        if (item.Privilege == 1)
                        {
                            <span>Admin</span>
                        }
                        else if (item.Privilege == 2)
                        {
                            <span>User</span>
                        }
                    }
                </td>
                <td>
                    <a asp-action="EditAccount" asp-route-id="@item.Id">Sửa</a> |
                    <a asp-action="DetailsAccount" asp-route-id="@item.Id">Xem</a> |
                    <a asp-action="DeleteAccount" asp-route-id="@item.Id">Xóa</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    
}
<a asp-action="Account"
   asp-route-pageNumber="@(Model.PageIndex-1)"
   asp-route-typeSearch="@ViewData["TypeSearch"]"
   asp-route-currentString="@ViewData["CurrentString"]"
   class="btn btn-dark @prevDisabled">
    Trang trước
</a>
@{
    for (int i = 1; i <= Model.TotalPages; i++)
    {
        var thisDisabled = i == Model.PageIndex ? "disabled" : "";
        <a asp-action="Account"
           asp-route-pageNumber="@i"
           asp-route-typeSearch="@ViewData["TypeSearch"]"
           asp-route-currentString="@ViewData["CurrentString"]"
           class="btn btn-dark @thisDisabled">
           @i
        </a>
    }
}
<a asp-action="Account"
   asp-route-pageNumber="@(Model.PageIndex+1)"
   asp-route-typeSearch="@ViewData["TypeSearch"]"
   asp-route-currentString="@ViewData["CurrentString"]"
   class="btn btn-dark @nextDisabled">
    Trang tiếp
</a>
